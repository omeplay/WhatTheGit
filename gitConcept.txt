Git is a mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel.

Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and IDEs (Integrated Development Environments).

PERFORMANCE
The raw performance characteristics of Git are very strong when compared to many alternatives. Committing new changes, branching, merging and comparing past versions are all optimized for performance. 

SECURITY
Git has been designed with the integrity of managed source code as a top priority. The content of the files as well as the true relationships between files and directories, versions, tags and commits, all of these objects in the Git repository are secured with a cryptographically secure hashing algorithm called SHA1.

FLEXIBILITY
Git is flexible in several respects: in support for various kinds of nonlinear development workflows, in its efficiency in both small and large projects and in its compatibility with many existing systems and protocols.

COLLABORATING

- Git remote - A remote in git is basically a bookmark for a different repository from which you may wish to pull or push code.
- Git push - The push term refers to upload local repository content to a remote repository. 
- Git pull - A git pull is what you would do to bring a local branch up-to-date with its remote version.
- Git add - Adds files in the to the staging area for Git.
- Git pull - To get the latest version of a repository run git pull. 
- Git Commit - Record the changes made to the files to a local repository
- Git checkout - Switch branches or restore working tree files
