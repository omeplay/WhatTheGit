Git is a mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel.

Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and IDEs (Integrated Development Environments).


The raw performance characteristics of Git are very strong when compared to many alternatives. Committing new changes, branching, merging and comparing past versions are all optimized for performance. 

SECURITY
Git has been designed with the integrity of managed source code as a top priority. The content of the files as well as the true relationships between files and directories, versions, tags and commits, all of these objects in the Git repository are secured with a cryptographically secure hashing algorithm called SHA1.

FLEXIBILITY
Git is flexible in several respects: in support for various kinds of nonlinear development workflows, in its efficiency in both small and large projects and in its compatibility with many existing systems and protocols.

COLLABORATING
- Git remote -> Manage set of tracked repositories
- Git push -> Update remote refs along with associated objects
- Git pull -> Fetch from and integrate with another repository or a local branch
-Git commit --amend -> Command to modify the most recent commit.
- Git remote -> Managing remote repositories
- Git fetch -> Command to retrieve the latest meta-data info from origin
- Git rebase -> Command to change the base of your branch from one commit to another
- Git push -> Command to upload local repository content to a remote repository
- Git pull -> Command to update the local repository to match that the remote repository
- Git commit -> Command to capture a snapshot of the project's currently staged changes.

